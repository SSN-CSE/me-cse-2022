*
:properties:
:author: DVV Prasad
:date: 12 May 2022
:end:

#+startup: showall
{{{title-tab}}}
| CODE | COURSE TITLE                               | L | T | P | C |
|      | MULTI-CORE ARCHITECTURES AND GPU COMPUTING | 3 | 0 | 0 | 3 |

** COURSE OBJECTIVES
- To understand the basics of multi-core architectures.
- To Understand the architectures of SIMD and MIMD systems
- To Learn CUDA programming constructs, and solutions.
 

{{{unit}}}
| UNIT I | MULTICORE PROCESSORS | 9 |
Single core to multicore architectures; Homogeneous and heterogeneous
Multi-core architectures: Intel multicore architectures -- SUN CMP
architecture -- IBM cell architecture; Introduction to warehouse-scale
computers architectures -- Physical infrastructure and costs.

{{{unit}}}
| UNIT II | MULTI PROCESSOR ARCHITECTURES AND ISSUES | 9 |
MIMD systems: Symmetric and distributed shared memory architectures;
Cache coherence; Interconnection networks; Performance issues;
Parallel program design.

{{{unit}}}
| UNIT III | VECTOR, SIMD AND GPU ARCHITECTURES | 9 |
SIMD Systems: Introduction -- Vector architecture -- SIMD extensions
for multimedia -- Graphics Processing Units; Detecting and enhancing
loop level parallelism; Case studies -- GPGPU computing

{{{unit}}}
| UNIT IV | GPU PROGRAMMING USING CUDA | 10 |
CUDA Hardware Overview: Threads -- Blocks -- Grids -- Warps --
Scheduling; Memory handling with CUDA: Shared memory -- Global memory
-- Constant memory and texture memory.

{{{unit}}}
| UNIT V | COMMON PROBLEMS, CAUSES, AND SOLUTIONS IN CUDA | 8 |
Common Problems: CUDA error handling -- Parallel programming issues --
Synchronization -- Algorithmic issues -- Finding and avoiding Errors.

\hfill *Total: 45*

** COURSE OUTCOMES
After the completion of this course, the students will be able to:
- Apply the concepts of different multicore architectures in exploiting parallelism (K3)
- Interpret the features and issues of MIMD systems (K2)
- Explain the features of SIMD systems (K2)
- Develop  programs using CUDA (K3)
- Apply and identify issues in CUDA programming (K3)

      
** REFERENCES
1. John L. Hennessey and David A. Patterson, ``Architecture -- A
   Quantitative Approach'', 6th edition, Morgan Kaufmann /
   Elsevier, 2017. (units I, III)
2. Peter S. Pacheco, ``An Introduction to Parallel Programming'',
   Morgan Kaufmann, 2014. (unit II)
3. Shane Cook, ``CUDA Programming: A Developer's Guide to Parallel
   Computing with GPUs (Applications of GPU Computing)'', First
   Edition, Morgan Kaufmann, 2012. (units IV, V)
4. Sanders J. Kandrot E. ``CUDA by example: An Introduction to
   General-Purpose GPU Programming'', Addison-Wesley, 2011.
5. Nicholas Wilt, ``CUDA Handbook: A Comprehensive Guide to GPU
   Programming'', Addison - Wesley, 2013.

** CO TO PO MAPPING
| PO/PSO | 1 | 2 | 3 | 4 |
|--------+---+---+---+---|
| CO1    | 2 | 1 | 1 |   |
| CO2    | 2 | 1 | 1 |   |
| CO3    | 2 | 1 | 1 |   |
| CO4    | 3 | 2 | 2 |   |
| CO5    | 3 | 2 | 2 |   |
|--------+---+---+---+---|
| Course | 3 | 2 | 2 |   |

