* <<<PCP1197>>> ADVANCED DATA STRUCTURES AND ALGORITHMS LAB
:properties:
:author: R. Kanchana, R.S. Milton
:date: 26 Aprl 2022
:end:

#+startup: showall

{{{credits}}}
|L|T|P|C|
|0|0|3|1.5|

** Course Objectives
- To learn advanced tree and graph structures.
- To learn the need for heap and disjoint set representations.
- To understand algorithm design techniques and apply suitable
  techniques for problems.

** Suggested Programming Languages
- C, Java or Python

** Suggestive Exercises
1. Insertion sort and merge sort with complexity analysis
2. Application of binary search trees 
3. Min heaps
4. Disjoint sets
5. Application of graph traversals -- BFS and DFS 
6. Single source Shortest Path Algorithms (e.g. Dijkstra's and Bellman
   Ford algorithms)  
7. All-pairs Shortest Path Algorithms: (e.g. Floyd's algorithm)
8. Dynamic programming (e.g. Longest common subsequence, 0/1 Knapsack)
9. Recursive backtracking (e.g. N-Queenâ€™s problem)
10. Greedy technique (e.g. Job/event scheduling, Minimum spanning tree)

 
\hfill *Total: 45*

** Course Outcomes
After the completion of this course, students will be able to:
- Solve problems using basic data structures and sorting algorithms. (K3)
- Solve problems using tree and graph structures. (K3)
- Analyse algorithm design techniques and develop efficient algorithms (K4)
 

#+NAME: co-po-mapping
|                |    | PO1 | PO2 | PO3 | PO4 | PO5 | PO6 | PO7 | PO8 | PO9 | PO10 | PO11 | 
|                |    |  K3 |  K6 |  K6 |  K6 |  K6 |     |     |     |     |      |      | 
| CO1            | K3 |   3 |   2 |   2 |  2  |     |   3 |     |     |     |      |      |
| CO2            | K3 |   3 |   2 |   2 |  2  |     |    3|     |     |     |      |      |
| CO3            | K3 |   3 |   2 |   2 |  2  |     |    3|     |     |     |      |      |
| Score          |    |  9  |   6 |   6 |  6  |     |    9|     |     |     |      |      |
| Course Mapping |    |   3 |   2 |   2 |  2  |     |    3|     |     |     |      |      |
