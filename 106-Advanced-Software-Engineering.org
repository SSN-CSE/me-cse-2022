* 
:properties:
:author: Chitra Babu
:date: 30 April 2022
:end:

#+startup: showall
{{{title-tab}}}
| CODE | COURSE TITLE                  | L | T | P | C |
|      | ADVANCED SOFTWARE ENGINEERING | 3 | 0 | 0 | 3 |

** COURSE OBJECTIVES
- To review the best practices in the various phases of the software engineering lifecycle
- To learn selection of suitable software architectural styles and tactics to achieve software quality requirements
- To learn selection of appropriate object-oriented design patterns to improve maintainability and software evolution
- To understand the DevOps Practices
- To understand MLOps practices
  
{{{unit}}}
|UNIT I | SOFTWARE ENGINEERING LIFECYCLE REVIEW  |9| 
Requirement Analysis and Specification --  
Software Requirements Specification Document -- Object Oriented Design using UML Diagrams-- 
Best Practices of Module Design: Coupling and Cohesion --
Testing: Blackbox and Whitebox Techniques
Agile Methodology: Pair Programming -- Test-Driven Development

{{{unit}}}
|UNIT II|SOFTWARE ARCHITECTURE |9| 
Architectural styles: Layered -- Client/server -- Tiered -- Pipe and
filter- Event Driven -- Understanding Quality attributes -- Tactics for achieving qualities in software  

{{{unit}}}
|UNIT III| SOFTWARE DESIGN |9| 
Object Oriented Design patterns --
Model-View-Controller -- Behavioural Patterns:
Strategy -- Observer -- Structural patterns: Adapter -- Proxy -- Facade -- 
Creational Patterns: Factory Method

{{{unit}}}
|UNIT IV|DEVOPS|9|
DevOps: Motivation-Cloud as a platform -- Operations -- Deployment
Pipeline: Overall Architecture -- Building and Testing -- Deployment --
Crosscutting concerns: Monitoring -- Security

{{{unit}}}
|UNIT V| MLOPS	|9| 
Introduction to MLOps: What is MLOps? -- DevOps and MLOps -- An MLops Hierarchy of needs -- 
MLOps Foundations: Machine Learning Key Concepts -- Build an MLOps Pipeline from Zero --  
Continuous Delivery for ML Models: Packaging for ML Models -- Infrastructure as Code for Continuous Delivery of ML Models 
-- Using Cloud Pipelines -- Monitoring and Logging: Observability for Cloud MLOps -- Monitoring and observability

\hfill *Total Periods: 45*

** COURSE OUTCOMES
After the completion of this course, students will be able to:
1. Make use of the UML diagrams and design software to meet the specified requirements (K3)
2. Apply suitable software architectural styles and tactics to achieve software quality requirements(K3)
3. Apply appropriate object-oriented design patterns to improve maintainability and software evolution (K3).
4. Define the best practices of DevOps(K2)
5. Summarize the MLOps Practices(K2).

** REFERENCES
1. Rajib Mall, ``Fundamentals of Software Engineering'', 5th edition,
   PHI Learning Pvt Ltd, 2018 (Unit I)
2. Craig Larman, ``Applying UML and Patterns'', 3rd edition, Pearson
   Education, 2005 (Unit I)
3. Mary Shaw, David Garlan, ``Software Architecture: Perspectives on
   an Emerging Discipline'', Pearson Education, 1996 (Unit II)
4. Len Bass, Paul Clements, Rick Kazman, "Software Architecture in Practice", Second Edition, Addison-Wesley, 2003 (Unit II)
5. Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides, "Design Patterns: Elements of Reusable Object-Oriented Software", Pearson Education, 1995 (Unit III)
6. Eic Freeman and Elisabeth Freeman, "Head First Design Patterns", O'Reilly Media, 2007 (Unit III)
7. Len Bass, Ingo Weber and Liming Zhu, ``DevOps: A Software
   Architect's Perspective'', Pearson Education, 2016 (Unit IV)
8. Noah Gift, Alfredo Deza, "Practical MLOps", O'Reilly Media Shroff Publishers and Distributors pvt. Ltd, 2021 (Unit V)
